@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@implements IAsyncDisposable

<div class="fixed bottom-0 right-0 mb-1 mr-1">
    <div class="flex items-center">
        <NavLink href="/" aria-label="chat">
            <button class="menuButton p-2" aria-label="home">
                <div class="flex">
                    <Icon Name="recycle" Padding="1" Size="20" />
                </div>
            </button>
        </NavLink>
        <button type="button" @onclick="ToggleTheme" class="menuButton" aria-label="theme">
            @if (_darkMode)
            {
                <Icon Name="sun-fill" Padding="@IconPadding" Size="@_iconSize" />
            }
            else
            {
                <Icon Name="moon-fill" Padding="@IconPadding" Size="@_iconSize" />
            }
        </button>
    </div>
</div>

@code {
    private bool _darkMode = false;
    private IJSObjectReference? _js;
    private int IconPadding => 2;
    private int _iconSize => 32;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _js = await JS.InvokeAsync<IJSObjectReference>("import", "./Shared/MenuRight.razor.js");
            _darkMode = await _js.InvokeAsync<bool>("isDarkModeDefault");
            if (_darkMode)
            {
                await _js.InvokeVoidAsync("toggleDarkMode");
                StateHasChanged();
            }
        }
    }

    private async Task ToggleTheme()
    {
        _darkMode = !_darkMode;
        if (_js != null)
        {
            await _js.InvokeVoidAsync("toggleDarkMode");
            StateHasChanged();
        }
    }
    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (_js is not null)
        {
            try
            {
                await _js.DisposeAsync();
                _js = null;
            }
            catch (JSDisconnectedException)
            {
                // We do not want to see this in logs, DisposeAsync call also throws exception if circuit lost
                // https://github.com/dotnet/aspnetcore/issues/44180
            }
        }
    }
}
