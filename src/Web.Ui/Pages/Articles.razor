@page "/articles"
@inject ISender Sender

<PageTitle>articles</PageTitle>

<table class="table-auto">
    <tbody>
        @foreach (var item in _headers.Items)
        {
            <tr>
                <td>
                    @{
                        var href = $"/article/{item.Id}";
                    }
                    <NavLink href="@href">
                        @item.Title
                    </NavLink>
                </td>
            </tr>
        }
        <tr>
            <td colspan="99">
                <div class="flex flex-wrap mt-4">
                    @if (_isPreviousEnabled)
                    {
                        <button aria-label="previous" class="w-48 min-w-48 mr-8 submitButton" @onclick="Previous">
                            <Icon Name="arrow-left-square" Height="28" Width="28" />
                        </button>
                    }
                    else
                    {
                        <button aria-label="previous" class="w-48 min-w-48 mr-8 submitButton" disabled @onclick="Previous">
                            <Icon Name="arrow-left-square" Height="28" Width="28" />
                        </button>

                    }
                    @if (_isNextEnabled)
                    {
                        <button aria-label="next" class="w-48 min-w-48 submitButton" @onclick="Next">
                            <Icon Name="arrow-right-square" Height="28" Width="28" />
                        </button>
                    }
                    else
                    {
                        <button aria-label="next" class="w-48 min-w-48 submitButton" disabled @onclick="Next">
                            <Icon Name="arrow-right-square" Height="28" Width="28" />
                        </button>
                    }
                </div>
            </td>
        </tr>
    </tbody>
</table>

@{
        /* for template
        <TableTemplate Items="_headers.Items" TItem="ArticleHeader" Context="header">
    <TableHeader>
    <th>Title</th>
        </TableHeader>
            <RowTemplate>
                <tr>
                <td>
                @{ var href = $"/article/{header.Id}"; }
                <NavLink href="@href">
            @header.Title
        </NavLink>
            </td>
            </tr>
        </RowTemplate>
    </TableTemplate>
    */
}
@code {
    #region table -> todo component
    private PaginatedList<ArticleHeader> _headers = new PaginatedList<ArticleHeader>(new List<ArticleHeader>(), 0, 0);
    private int _pageSize = 10;
    private bool _isPreviousEnabled
    {
        get
        {
            return _headers.Offset > _pageSize;
        }
    }
    private bool _isNextEnabled
    {
        get
        {
            return _headers.TotalCount > _pageSize + _headers.Offset;
        }
    }
    protected override async Task OnInitializedAsync()
    {
        _headers = await Sender.Send(new GetArticleHeadersQuery { OnlyPublished = true, Offset = 0, PageSize = _pageSize });
    }
    private async Task Previous()
    {
        if (_isPreviousEnabled)
        {
            _headers = await Sender.Send(new GetArticleHeadersQuery { OnlyPublished = true, Offset = _headers.Offset - _pageSize, PageSize = _pageSize });
        }
    }
    private async Task Next()
    {
        if (_isNextEnabled)
        {
            _headers = await Sender.Send(new GetArticleHeadersQuery { OnlyPublished = true, Offset = _headers.Offset + _pageSize, PageSize = _pageSize });
        }
    }
    #endregion table -> todo component
}
