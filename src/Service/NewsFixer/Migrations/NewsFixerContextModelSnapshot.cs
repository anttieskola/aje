// <auto-generated />
using System;
using AJE.Service.NewsFixer.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AJE.Service.NewsFixer.Migrations
{
    [DbContext(typeof(NewsFixerContext))]
    partial class NewsFixerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AJE.Service.NewsFixer.Infra.ArticleRow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<bool>("IsValid")
                        .HasColumnType("boolean")
                        .HasColumnName("isvalid")
                        .HasAnnotation("Relational:JsonPropertyName", "isValid");

                    b.Property<int>("TokenCount")
                        .HasColumnType("integer")
                        .HasColumnName("tokencount")
                        .HasAnnotation("Relational:JsonPropertyName", "tokenCount");

                    b.Property<int>("WordCount")
                        .HasColumnType("integer")
                        .HasColumnName("wordcount")
                        .HasAnnotation("Relational:JsonPropertyName", "wordCount");

                    b.HasKey("Id");

                    b.ToTable("articles");
                });
#pragma warning restore 612, 618
        }
    }
}
